{
  "version": 3,
  "sources": ["../src/blueprint.ts"],
  "sourcesContent": [
    "import { XinBlueprint } from 'xinjs'\n\ntype B3dCallback =\n  | ((element: HTMLElement, BABYLON: any) => void)\n  | ((element: HTMLElement, BABYLON: any) => Promise<void>)\n\ninterface B3dUIOptions {\n  snippetId?: string\n  jsonUrl?: string\n  data?: any\n  size?: number\n}\n\ntype MeshProcessCallback = (meshes: any[]) => void\n\nconst noop = () => {\n  /* do not care */\n}\n\nconst scriptMap: { [key: string]: Promise<any> } = {}\nconst scriptTag = (url: string, name: string): Promise<any> => {\n  if (!scriptMap[url]) {\n    scriptMap[url] = new Promise((resolve) => {\n      const script = document.createElement('script')\n      script.setAttribute('src', url)\n      script.onload = () => {\n        // @ts-expect-error do not care\n        resolve(window[name])\n      }\n      document.head.append(script)\n    })\n  }\n  return scriptMap[url]\n}\n\nexport const b3d: XinBlueprint = (tag, factory) => {\n  const { Component, elements, vars } = factory\n\n  class B3d extends Component {\n    babylonReady: Promise<any>\n    BABYLON?: any\n\n    static styleSpec = {\n      ':host': {\n        display: 'block',\n        position: 'relative',\n      },\n      ':host canvas': {\n        width: '100%',\n        height: '100%',\n      },\n      ':host .babylonVRicon': {\n        height: 50,\n        width: 80,\n        backgroundColor: 'transparent',\n        filter: 'drop-shadow(0 0 4px #000c)',\n        // backgroundImage: svg2DataUrl(icons.xr(), '#fffd'),\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        border: 'none',\n        borderRadius: 5,\n        borderStyle: 'none',\n        outline: 'none',\n        transition: 'transform 0.125s ease-out',\n      },\n      ':host .babylonVRicon:hover': {\n        transform: 'scale(1.1)',\n      },\n    }\n\n    content = elements.canvas({ part: 'canvas' })\n\n    constructor() {\n      super()\n\n      this.babylonReady = scriptTag(\n        'https://cdn.babylonjs.com/babylon.js',\n        'BABYLON'\n      )\n    }\n\n    scene: any\n    engine: any\n\n    sceneCreated: B3dCallback = noop\n    update: B3dCallback = noop\n\n    private _update = () => {\n      if (this.scene) {\n        if (this.update !== undefined) {\n          this.update(this, this.BABYLON)\n        }\n        if (this.scene.activeCamera !== undefined) {\n          this.scene.render()\n        }\n      }\n    }\n\n    onResize() {\n      if (this.engine) {\n        this.engine.resize()\n      }\n    }\n\n    loadScene = async (\n      path: string,\n      file: string,\n      processCallback?: MeshProcessCallback\n    ): Promise<void> => {\n      const BABYLON = await scriptTag(\n        'https://cdn.babylonjs.com/loaders/babylonjs.loaders.min.js',\n        'BABYLON'\n      )\n\n      BABYLON.SceneLoader.Append(path, file, this.scene, processCallback)\n    }\n\n    loadUI = async (options: B3dUIOptions): Promise<any> => {\n      const BABYLON = await scriptTag(\n        'https://cdn.babylonjs.com/gui/babylon.gui.min.js',\n        'BABYLON'\n      )\n      const advancedTexture =\n        BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI(\n          'GUI',\n          true,\n          this.scene\n        )\n      const { snippetId, jsonUrl, data, size } = options\n      if (size) {\n        advancedTexture.idealWidth = size\n        advancedTexture.renderAtIdealSize = true\n      }\n      // edit or create your own snippet here\n      // https://gui.babylonjs.com/\n      let gui\n      if (snippetId) {\n        gui = await advancedTexture.parseFromSnippetAsync(snippetId)\n      } else if (jsonUrl) {\n        gui = await advancedTexture.parseFromURLAsync(jsonUrl)\n      } else if (data) {\n        gui = advancedTexture.parseContent(data)\n      } else {\n        return null\n      }\n\n      const root = advancedTexture.getChildren()[0]\n      const widgets = root.children.reduce(\n        (map: { [key: string]: any }, widget: any) => {\n          map[widget.name] = widget\n          return map\n        },\n        {}\n      )\n\n      return { advancedTexture, gui, root, widgets }\n    }\n\n    connectedCallback(): void {\n      super.connectedCallback()\n\n      const { canvas } = this.parts as { canvas: HTMLCanvasElement }\n\n      this.babylonReady.then(async (BABYLON) => {\n        this.BABYLON = BABYLON\n        this.engine = new BABYLON.Engine(canvas, true)\n        this.scene = new BABYLON.Scene(this.engine)\n        if (this.sceneCreated) {\n          await this.sceneCreated(this, BABYLON)\n        }\n        if (this.scene.activeCamera === undefined) {\n          const camera = new BABYLON.ArcRotateCamera(\n            'default-camera',\n            -Math.PI / 2,\n            Math.PI / 2.5,\n            3,\n            new BABYLON.Vector3(0, 0, 0)\n          )\n          camera.attachControl(this.parts.canvas, true)\n        }\n        this.engine.runRenderLoop(this._update)\n      })\n    }\n  }\n\n  return {\n    type: B3d,\n    styleSpec: {\n      ':root': {\n        _toggleTrackColor: 'lightgray',\n        _toggleTrackOnColor: vars.toggleTrackColor,\n        _toggleOffColor: 'gray',\n        _toggleOnColor: 'limegreen',\n        _toggleKnobSize: '24px',\n        _toggleKnobRadius: vars.toggleKnobSize50,\n        _toggleTransition: 'ease-in-out 0.2s',\n        _toggleTrackWidth: '32px',\n        _toggleTrackInset: '8px',\n        _toggleTrackHeight: `calc(${vars.toggleKnobSize} - ${vars.toggleTrackInset200})`,\n        _toggleTrackRadius: vars.toggleTrackHeight50,\n        _toggleDisabledOpacity: '0.5',\n        _toggleKnobShadow:\n          'inset 0 1px 1px #fff8, inset 0 -1px 1px #0004, 0 2px 4px #0006',\n        _toggleTrackShadow: 'inset 0 1px 2px #0004',\n        _toggleGap: '8px',\n      },\n      ':host[disabled]': {\n        pointerEvents: 'none',\n        opacity: vars.toggleDisabledOpacity,\n      },\n    },\n  }\n}\n\nexport default b3d\n"
  ],
  "mappings": "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",
  "debugId": "91E2CA3D0AAD085F64756E2164756E21",
  "names": []
}